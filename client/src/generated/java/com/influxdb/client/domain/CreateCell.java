/*
 * InfluxDB OSS API Service
 * The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint. 
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.influxdb.client.domain;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

/**
 * CreateCell
 */

public class CreateCell {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_X = "x";
  @SerializedName(SERIALIZED_NAME_X)
  private Integer x;

  public static final String SERIALIZED_NAME_Y = "y";
  @SerializedName(SERIALIZED_NAME_Y)
  private Integer y;

  public static final String SERIALIZED_NAME_W = "w";
  @SerializedName(SERIALIZED_NAME_W)
  private Integer w;

  public static final String SERIALIZED_NAME_H = "h";
  @SerializedName(SERIALIZED_NAME_H)
  private Integer h;

  public static final String SERIALIZED_NAME_USING_VIEW = "usingView";
  @SerializedName(SERIALIZED_NAME_USING_VIEW)
  private String usingView;

  public CreateCell name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateCell x(Integer x) {
    this.x = x;
    return this;
  }

   /**
   * Get x
   * @return x
  **/
  public Integer getX() {
    return x;
  }

  public void setX(Integer x) {
    this.x = x;
  }

  public CreateCell y(Integer y) {
    this.y = y;
    return this;
  }

   /**
   * Get y
   * @return y
  **/
  public Integer getY() {
    return y;
  }

  public void setY(Integer y) {
    this.y = y;
  }

  public CreateCell w(Integer w) {
    this.w = w;
    return this;
  }

   /**
   * Get w
   * @return w
  **/
  public Integer getW() {
    return w;
  }

  public void setW(Integer w) {
    this.w = w;
  }

  public CreateCell h(Integer h) {
    this.h = h;
    return this;
  }

   /**
   * Get h
   * @return h
  **/
  public Integer getH() {
    return h;
  }

  public void setH(Integer h) {
    this.h = h;
  }

  public CreateCell usingView(String usingView) {
    this.usingView = usingView;
    return this;
  }

   /**
   * Makes a copy of the provided view.
   * @return usingView
  **/
  public String getUsingView() {
    return usingView;
  }

  public void setUsingView(String usingView) {
    this.usingView = usingView;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCell createCell = (CreateCell) o;
    return Objects.equals(this.name, createCell.name) &&
        Objects.equals(this.x, createCell.x) &&
        Objects.equals(this.y, createCell.y) &&
        Objects.equals(this.w, createCell.w) &&
        Objects.equals(this.h, createCell.h) &&
        Objects.equals(this.usingView, createCell.usingView);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, x, y, w, h, usingView);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCell {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    x: ").append(toIndentedString(x)).append("\n");
    sb.append("    y: ").append(toIndentedString(y)).append("\n");
    sb.append("    w: ").append(toIndentedString(w)).append("\n");
    sb.append("    h: ").append(toIndentedString(h)).append("\n");
    sb.append("    usingView: ").append(toIndentedString(usingView)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

