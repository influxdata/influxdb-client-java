/*
 * InfluxDB OSS API Service
 * The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint. 
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.influxdb.client.domain;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.influxdb.client.domain.TemplateChart;
import com.influxdb.client.domain.TemplateKind;
import com.influxdb.client.domain.TemplateSummaryLabel;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TemplateSummarySummaryDashboards
 */

public class TemplateSummarySummaryDashboards {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ORG_I_D = "orgID";
  @SerializedName(SERIALIZED_NAME_ORG_I_D)
  private String orgID;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private TemplateKind kind = null;

  public static final String SERIALIZED_NAME_TEMPLATE_META_NAME = "templateMetaName";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_META_NAME)
  private String templateMetaName;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LABEL_ASSOCIATIONS = "labelAssociations";
  @SerializedName(SERIALIZED_NAME_LABEL_ASSOCIATIONS)
  private List<TemplateSummaryLabel> labelAssociations = new ArrayList<>();

  public static final String SERIALIZED_NAME_CHARTS = "charts";
  @SerializedName(SERIALIZED_NAME_CHARTS)
  private List<TemplateChart> charts = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENV_REFERENCES = "envReferences";
  @SerializedName(SERIALIZED_NAME_ENV_REFERENCES)
  private List<Object> envReferences = new ArrayList<>();

  public TemplateSummarySummaryDashboards id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TemplateSummarySummaryDashboards orgID(String orgID) {
    this.orgID = orgID;
    return this;
  }

   /**
   * Get orgID
   * @return orgID
  **/
  public String getOrgID() {
    return orgID;
  }

  public void setOrgID(String orgID) {
    this.orgID = orgID;
  }

  public TemplateSummarySummaryDashboards kind(TemplateKind kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  public TemplateKind getKind() {
    return kind;
  }

  public void setKind(TemplateKind kind) {
    this.kind = kind;
  }

  public TemplateSummarySummaryDashboards templateMetaName(String templateMetaName) {
    this.templateMetaName = templateMetaName;
    return this;
  }

   /**
   * Get templateMetaName
   * @return templateMetaName
  **/
  public String getTemplateMetaName() {
    return templateMetaName;
  }

  public void setTemplateMetaName(String templateMetaName) {
    this.templateMetaName = templateMetaName;
  }

  public TemplateSummarySummaryDashboards name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TemplateSummarySummaryDashboards description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TemplateSummarySummaryDashboards labelAssociations(List<TemplateSummaryLabel> labelAssociations) {
    this.labelAssociations = labelAssociations;
    return this;
  }

  public TemplateSummarySummaryDashboards addLabelAssociationsItem(TemplateSummaryLabel labelAssociationsItem) {
    if (this.labelAssociations == null) {
      this.labelAssociations = new ArrayList<>();
    }
    this.labelAssociations.add(labelAssociationsItem);
    return this;
  }

   /**
   * Get labelAssociations
   * @return labelAssociations
  **/
  public List<TemplateSummaryLabel> getLabelAssociations() {
    return labelAssociations;
  }

  public void setLabelAssociations(List<TemplateSummaryLabel> labelAssociations) {
    this.labelAssociations = labelAssociations;
  }

  public TemplateSummarySummaryDashboards charts(List<TemplateChart> charts) {
    this.charts = charts;
    return this;
  }

  public TemplateSummarySummaryDashboards addChartsItem(TemplateChart chartsItem) {
    if (this.charts == null) {
      this.charts = new ArrayList<>();
    }
    this.charts.add(chartsItem);
    return this;
  }

   /**
   * Get charts
   * @return charts
  **/
  public List<TemplateChart> getCharts() {
    return charts;
  }

  public void setCharts(List<TemplateChart> charts) {
    this.charts = charts;
  }

  public TemplateSummarySummaryDashboards envReferences(List<Object> envReferences) {
    this.envReferences = envReferences;
    return this;
  }

  public TemplateSummarySummaryDashboards addEnvReferencesItem(Object envReferencesItem) {
    if (this.envReferences == null) {
      this.envReferences = new ArrayList<>();
    }
    this.envReferences.add(envReferencesItem);
    return this;
  }

   /**
   * Get envReferences
   * @return envReferences
  **/
  public List<Object> getEnvReferences() {
    return envReferences;
  }

  public void setEnvReferences(List<Object> envReferences) {
    this.envReferences = envReferences;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TemplateSummarySummaryDashboards templateSummarySummaryDashboards = (TemplateSummarySummaryDashboards) o;
    return Objects.equals(this.id, templateSummarySummaryDashboards.id) &&
        Objects.equals(this.orgID, templateSummarySummaryDashboards.orgID) &&
        Objects.equals(this.kind, templateSummarySummaryDashboards.kind) &&
        Objects.equals(this.templateMetaName, templateSummarySummaryDashboards.templateMetaName) &&
        Objects.equals(this.name, templateSummarySummaryDashboards.name) &&
        Objects.equals(this.description, templateSummarySummaryDashboards.description) &&
        Objects.equals(this.labelAssociations, templateSummarySummaryDashboards.labelAssociations) &&
        Objects.equals(this.charts, templateSummarySummaryDashboards.charts) &&
        Objects.equals(this.envReferences, templateSummarySummaryDashboards.envReferences);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, orgID, kind, templateMetaName, name, description, labelAssociations, charts, envReferences);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateSummarySummaryDashboards {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    orgID: ").append(toIndentedString(orgID)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    templateMetaName: ").append(toIndentedString(templateMetaName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    labelAssociations: ").append(toIndentedString(labelAssociations)).append("\n");
    sb.append("    charts: ").append(toIndentedString(charts)).append("\n");
    sb.append("    envReferences: ").append(toIndentedString(envReferences)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

