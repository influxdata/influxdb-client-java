#
# The MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

version: 2.1

commands:
  influxdb-onboarding:
    steps:
      - run:
          name: "Post onBoarding request to InfluxDB 2"
          command: ./scripts/influxdb-onboarding.sh
  prepare:
    description: "Prepare environment to tests"
    steps:
      - checkout
      - influxdb-onboarding
  client-test:
    description: "Run tests"
    parameters:
      maven-image:
        type: string
    steps:
      - restore_cache:
          name: Restoring Maven Cache
          keys:
            - &cache-key maven-cache_v3-<< parameters.maven-image >>-{{ checksum "pom.xml" }}-{{ checksum "client-core/pom.xml" }}-{{ checksum "client/pom.xml" }}-{{ checksum "client-kotlin/pom.xml" }}-{{ checksum "client-legacy/pom.xml" }}-{{ checksum "client-reactive/pom.xml" }}-{{ checksum "client-scala/cross/2.12/pom.xml" }}-{{ checksum "client-scala/cross/2.13/pom.xml" }}-{{ checksum "client-osgi/pom.xml" }}-{{ checksum "client-test/pom.xml" }}-{{ checksum "spring/pom.xml" }}-{{ checksum "flux-dsl/pom.xml" }}-{{ checksum "karaf/pom.xml" }}-{{ checksum "karaf/karaf-assembly/pom.xml" }}-{{ checksum "karaf/karaf-features/pom.xml" }}-{{ checksum "karaf/karaf-kar/pom.xml" }}
            - maven-cache_v3-<< parameters.maven-image >>-
      - run:
          name: "Running tests"
          command: |
            mvn -B -U clean install -Dmaven.javadoc.skip=true -Dmaven.dokka.skip=true -Dbuild.env=CI
      - save_cache:
          name: Saving Maven Cache
          key: *cache-key
          paths:
            - ~/.m2
  storing-test-results:
    steps:
      - run:
          name: "Copying test results"
          when: always
          command: |
            mkdir test-results
            mkdir test-results/client-core
            cp -r client-core/target/*/TEST-*.xml test-results/client-core || true
            mkdir test-results/client
            cp -r client/target/*/TEST-*.xml test-results/client || true
            mkdir test-results/client-legacy
            cp -r client-legacy/target/*/TEST-*.xml test-results/client-legacy || true
            mkdir test-results/client-reactive
            cp -r client-reactive/target/*/TEST-*.xml test-results/client-reactive || true
            mkdir test-results/client-kotlin
            cp -r client-kotlin/target/*/TEST-*.xml test-results/client-kotlin || true
            mkdir test-results/client-scala_2.12
            cp -r  client-scala/cross/2.12/target/*/TEST-*.xml test-results/client-scala_2.12 || true
            mkdir test-results/client-scala_2.13
            cp -r  client-scala/cross/2.13/target/*/TEST-*.xml test-results/client-scala_2.13 || true
            mkdir test-results/client-osgi
            cp -r client-osgi/target/*/TEST-*.xml test-results/client-osgi || true
            mkdir test-results/spring
            cp -r spring/target/*/TEST-*.xml test-results/spring || true
            mkdir test-results/flux-dsl
            cp -r flux-dsl/target/*/TEST-*.xml test-results/flux-dsl || true
      - store_test_results:
          path: test-results
  storing-artifacts:
    steps:
      - run:
          name: "Copying artifacts"
          command: |
            mkdir artifacts
            cp -r client-core/target/*.jar artifacts/
            cp -r client/target/*.jar artifacts/
            cp -r client-legacy/target/*.jar artifacts/
            cp -r client-reactive/target/*.jar artifacts/
            cp -r client-kotlin/target/*.jar artifacts/
            cp -r client-scala/cross/2.12/target/*.jar artifacts/
            cp -r client-scala/cross/2.13/target/*.jar artifacts/
            cp -r client-osgi/target/*.jar artifacts/
            cp -r spring/target/*.jar artifacts/
            cp -r flux-dsl/target/*.jar artifacts/
      - store_artifacts:
          path: artifacts

jobs:

  tests-java:
    parameters:
      maven-image:
        type: string
        default: &default-maven-image "cimg/openjdk:8.0"
      influxdb-image:
        type: string
        default: &default-influxdb-image "influxdb:latest"
    docker:
      - image: << parameters.maven-image >>
      - image: &influx-image << parameters.influxdb-image >>
        environment:
          INFLUXD_HTTP_BIND_ADDRESS: :9999
      - image: &influx-image << parameters.influxdb-image >>
        name: influxdb_v2_onboarding
        environment:
          INFLUXD_HTTP_BIND_ADDRESS: :9999
      - image: influxdb:1.8-alpine
        environment:
          INFLUXDB_HTTP_FLUX_ENABLED: true
    environment:
      INFLUXDB_2_ONBOARDING_IP: influxdb_v2_onboarding
      INFLUXDB_2_ONBOARDING_PORT: 9999
    steps:
      - prepare
      - client-test:
          maven-image: << parameters.maven-image >>
      - storing-test-results
      - storing-artifacts
      - run:
          name: "Collecting coverage reports"
          command: bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"

  deploy-snapshot:
    docker:
      - image: *default-maven-image
    steps:
      - run:
          name: Early return if this build is from a forked repository
          command: |
            if [[ $CIRCLE_PROJECT_USERNAME != "influxdata" ]]; then
              echo "Nothing to do for forked repositories, so marking this step successful"
              circleci step halt
            fi
      - checkout
      - run:
          name: Early return if this build is not a Snapshot version
          command: |
            sudo apt-get update
            sudo apt-get install libxml2-utils
            export PROJECT_VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
            echo "Project version: $PROJECT_VERSION"
            if [[ $PROJECT_VERSION != *SNAPSHOT ]]; then
              echo "Nothing to do for this build, so marking this step successful"
              circleci step halt
            fi
      - restore_cache:
          name: Restoring Maven Cache
          keys:
            - &cache-key-deploy maven-cache-deploy_v2-{{ checksum "pom.xml" }}-{{ checksum "client-core/pom.xml" }}-{{ checksum "client/pom.xml" }}-{{ checksum "client-kotlin/pom.xml" }}-{{ checksum "client-legacy/pom.xml" }}-{{ checksum "client-reactive/pom.xml" }}-{{ checksum "client-scala/cross/2.12/pom.xml" }}-{{ checksum "client-scala/cross/2.13/pom.xml" }}-{{ checksum "client-osgi/pom.xml" }}-{{ checksum "client-test/pom.xml" }}-{{ checksum "spring/pom.xml" }}-{{ checksum "flux-dsl/pom.xml" }}-{{ checksum "karaf/pom.xml" }}-{{ checksum "karaf/karaf-assembly/pom.xml" }}-{{ checksum "karaf/karaf-features/pom.xml" }}-{{ checksum "karaf/karaf-kar/pom.xml" }}
            - maven-cache-deploy_v2-
      - run:
          name: Deploying Snapshot
          command: |
            mvn -s scripts/deploy-settings.xml -DskipTests=true clean package deploy
      - save_cache:
          name: Saving Maven Cache
          key: *cache-key-deploy
          paths:
            - ~/.m2

workflows:
  version: 2
  build:
    jobs:
      - tests-java:
          name: jdk-8
      - tests-java:
          name: jdk-11
          maven-image: "cimg/openjdk:11.0"
      - tests-java:
          name: jdk-16
          maven-image: "cimg/openjdk:16.0"
      - tests-java:
          name: jdk-8-nightly
          influxdb-image: "quay.io/influxdb/influxdb:nightly"
      - deploy-snapshot:
          requires:
            - jdk-8
            - jdk-11
            - jdk-8-nightly
          filters:
            branches:
              only: master

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - tests-java
      - tests-java:
          name: jdk-11-beta
          maven-image: "cimg/openjdk:11.0"