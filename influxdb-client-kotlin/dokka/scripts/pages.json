[{"name":"abstract fun <M> query(query: Query, measurementType: Class<M>): Channel<M>","description":"com.influxdb.client.kotlin.QueryKotlinApi.query","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query.html","searchKeys":["query","abstract fun <M> query(query: Query, measurementType: Class<M>): Channel<M>","com.influxdb.client.kotlin.QueryKotlinApi.query"]},{"name":"abstract fun <M> query(query: Query, org: String, measurementType: Class<M>): Channel<M>","description":"com.influxdb.client.kotlin.QueryKotlinApi.query","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query.html","searchKeys":["query","abstract fun <M> query(query: Query, org: String, measurementType: Class<M>): Channel<M>","com.influxdb.client.kotlin.QueryKotlinApi.query"]},{"name":"abstract fun <M> query(query: String, measurementType: Class<M>): Channel<M>","description":"com.influxdb.client.kotlin.QueryKotlinApi.query","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query.html","searchKeys":["query","abstract fun <M> query(query: String, measurementType: Class<M>): Channel<M>","com.influxdb.client.kotlin.QueryKotlinApi.query"]},{"name":"abstract fun <M> query(query: String, org: String, measurementType: Class<M>): Channel<M>","description":"com.influxdb.client.kotlin.QueryKotlinApi.query","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query.html","searchKeys":["query","abstract fun <M> query(query: String, org: String, measurementType: Class<M>): Channel<M>","com.influxdb.client.kotlin.QueryKotlinApi.query"]},{"name":"abstract fun disableGzip(): InfluxDBClientKotlin","description":"com.influxdb.client.kotlin.InfluxDBClientKotlin.disableGzip","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin/disable-gzip.html","searchKeys":["disableGzip","abstract fun disableGzip(): InfluxDBClientKotlin","com.influxdb.client.kotlin.InfluxDBClientKotlin.disableGzip"]},{"name":"abstract fun enableGzip(): InfluxDBClientKotlin","description":"com.influxdb.client.kotlin.InfluxDBClientKotlin.enableGzip","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin/enable-gzip.html","searchKeys":["enableGzip","abstract fun enableGzip(): InfluxDBClientKotlin","com.influxdb.client.kotlin.InfluxDBClientKotlin.enableGzip"]},{"name":"abstract fun getLogLevel(): LogLevel","description":"com.influxdb.client.kotlin.InfluxDBClientKotlin.getLogLevel","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin/get-log-level.html","searchKeys":["getLogLevel","abstract fun getLogLevel(): LogLevel","com.influxdb.client.kotlin.InfluxDBClientKotlin.getLogLevel"]},{"name":"abstract fun getQueryKotlinApi(): QueryKotlinApi","description":"com.influxdb.client.kotlin.InfluxDBClientKotlin.getQueryKotlinApi","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin/get-query-kotlin-api.html","searchKeys":["getQueryKotlinApi","abstract fun getQueryKotlinApi(): QueryKotlinApi","com.influxdb.client.kotlin.InfluxDBClientKotlin.getQueryKotlinApi"]},{"name":"abstract fun getWriteKotlinApi(): WriteKotlinApi","description":"com.influxdb.client.kotlin.InfluxDBClientKotlin.getWriteKotlinApi","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin/get-write-kotlin-api.html","searchKeys":["getWriteKotlinApi","abstract fun getWriteKotlinApi(): WriteKotlinApi","com.influxdb.client.kotlin.InfluxDBClientKotlin.getWriteKotlinApi"]},{"name":"abstract fun health(): HealthCheck","description":"com.influxdb.client.kotlin.InfluxDBClientKotlin.health","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin/health.html","searchKeys":["health","abstract fun health(): HealthCheck","com.influxdb.client.kotlin.InfluxDBClientKotlin.health"]},{"name":"abstract fun isGzipEnabled(): Boolean","description":"com.influxdb.client.kotlin.InfluxDBClientKotlin.isGzipEnabled","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin/is-gzip-enabled.html","searchKeys":["isGzipEnabled","abstract fun isGzipEnabled(): Boolean","com.influxdb.client.kotlin.InfluxDBClientKotlin.isGzipEnabled"]},{"name":"abstract fun ping(): Boolean","description":"com.influxdb.client.kotlin.InfluxDBClientKotlin.ping","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin/ping.html","searchKeys":["ping","abstract fun ping(): Boolean","com.influxdb.client.kotlin.InfluxDBClientKotlin.ping"]},{"name":"abstract fun query(query: Query): Channel<FluxRecord>","description":"com.influxdb.client.kotlin.QueryKotlinApi.query","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query.html","searchKeys":["query","abstract fun query(query: Query): Channel<FluxRecord>","com.influxdb.client.kotlin.QueryKotlinApi.query"]},{"name":"abstract fun query(query: Query, org: String): Channel<FluxRecord>","description":"com.influxdb.client.kotlin.QueryKotlinApi.query","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query.html","searchKeys":["query","abstract fun query(query: Query, org: String): Channel<FluxRecord>","com.influxdb.client.kotlin.QueryKotlinApi.query"]},{"name":"abstract fun query(query: String): Channel<FluxRecord>","description":"com.influxdb.client.kotlin.QueryKotlinApi.query","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query.html","searchKeys":["query","abstract fun query(query: String): Channel<FluxRecord>","com.influxdb.client.kotlin.QueryKotlinApi.query"]},{"name":"abstract fun query(query: String, org: String): Channel<FluxRecord>","description":"com.influxdb.client.kotlin.QueryKotlinApi.query","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query.html","searchKeys":["query","abstract fun query(query: String, org: String): Channel<FluxRecord>","com.influxdb.client.kotlin.QueryKotlinApi.query"]},{"name":"abstract fun queryRaw(query: Query): Channel<String>","description":"com.influxdb.client.kotlin.QueryKotlinApi.queryRaw","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query-raw.html","searchKeys":["queryRaw","abstract fun queryRaw(query: Query): Channel<String>","com.influxdb.client.kotlin.QueryKotlinApi.queryRaw"]},{"name":"abstract fun queryRaw(query: Query, org: String): Channel<String>","description":"com.influxdb.client.kotlin.QueryKotlinApi.queryRaw","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query-raw.html","searchKeys":["queryRaw","abstract fun queryRaw(query: Query, org: String): Channel<String>","com.influxdb.client.kotlin.QueryKotlinApi.queryRaw"]},{"name":"abstract fun queryRaw(query: String): Channel<String>","description":"com.influxdb.client.kotlin.QueryKotlinApi.queryRaw","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query-raw.html","searchKeys":["queryRaw","abstract fun queryRaw(query: String): Channel<String>","com.influxdb.client.kotlin.QueryKotlinApi.queryRaw"]},{"name":"abstract fun queryRaw(query: String, dialect: Dialect): Channel<String>","description":"com.influxdb.client.kotlin.QueryKotlinApi.queryRaw","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query-raw.html","searchKeys":["queryRaw","abstract fun queryRaw(query: String, dialect: Dialect): Channel<String>","com.influxdb.client.kotlin.QueryKotlinApi.queryRaw"]},{"name":"abstract fun queryRaw(query: String, dialect: Dialect, org: String): Channel<String>","description":"com.influxdb.client.kotlin.QueryKotlinApi.queryRaw","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query-raw.html","searchKeys":["queryRaw","abstract fun queryRaw(query: String, dialect: Dialect, org: String): Channel<String>","com.influxdb.client.kotlin.QueryKotlinApi.queryRaw"]},{"name":"abstract fun queryRaw(query: String, org: String): Channel<String>","description":"com.influxdb.client.kotlin.QueryKotlinApi.queryRaw","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/query-raw.html","searchKeys":["queryRaw","abstract fun queryRaw(query: String, org: String): Channel<String>","com.influxdb.client.kotlin.QueryKotlinApi.queryRaw"]},{"name":"abstract fun setLogLevel(logLevel: LogLevel): InfluxDBClientKotlin","description":"com.influxdb.client.kotlin.InfluxDBClientKotlin.setLogLevel","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin/set-log-level.html","searchKeys":["setLogLevel","abstract fun setLogLevel(logLevel: LogLevel): InfluxDBClientKotlin","com.influxdb.client.kotlin.InfluxDBClientKotlin.setLogLevel"]},{"name":"abstract fun version(): String","description":"com.influxdb.client.kotlin.InfluxDBClientKotlin.version","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin/version.html","searchKeys":["version","abstract fun version(): String","com.influxdb.client.kotlin.InfluxDBClientKotlin.version"]},{"name":"abstract override fun close()","description":"com.influxdb.client.kotlin.InfluxDBClientKotlin.close","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin/close.html","searchKeys":["close","abstract override fun close()","com.influxdb.client.kotlin.InfluxDBClientKotlin.close"]},{"name":"abstract suspend fun <M> writeMeasurement(measurement: M, precision: WritePrecision, bucket: String? = null, org: String? = null)","description":"com.influxdb.client.kotlin.WriteKotlinApi.writeMeasurement","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/write-measurement.html","searchKeys":["writeMeasurement","abstract suspend fun <M> writeMeasurement(measurement: M, precision: WritePrecision, bucket: String? = null, org: String? = null)","com.influxdb.client.kotlin.WriteKotlinApi.writeMeasurement"]},{"name":"abstract suspend fun <M> writeMeasurements(measurements: Flow<M>, parameters: WriteParameters)","description":"com.influxdb.client.kotlin.WriteKotlinApi.writeMeasurements","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/write-measurements.html","searchKeys":["writeMeasurements","abstract suspend fun <M> writeMeasurements(measurements: Flow<M>, parameters: WriteParameters)","com.influxdb.client.kotlin.WriteKotlinApi.writeMeasurements"]},{"name":"abstract suspend fun <M> writeMeasurements(measurements: Flow<M>, precision: WritePrecision, bucket: String? = null, org: String? = null)","description":"com.influxdb.client.kotlin.WriteKotlinApi.writeMeasurements","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/write-measurements.html","searchKeys":["writeMeasurements","abstract suspend fun <M> writeMeasurements(measurements: Flow<M>, precision: WritePrecision, bucket: String? = null, org: String? = null)","com.influxdb.client.kotlin.WriteKotlinApi.writeMeasurements"]},{"name":"abstract suspend fun <M> writeMeasurements(measurements: Iterable<M>, precision: WritePrecision, bucket: String? = null, org: String? = null)","description":"com.influxdb.client.kotlin.WriteKotlinApi.writeMeasurements","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/write-measurements.html","searchKeys":["writeMeasurements","abstract suspend fun <M> writeMeasurements(measurements: Iterable<M>, precision: WritePrecision, bucket: String? = null, org: String? = null)","com.influxdb.client.kotlin.WriteKotlinApi.writeMeasurements"]},{"name":"abstract suspend fun writePoint(point: Point, bucket: String? = null, org: String? = null)","description":"com.influxdb.client.kotlin.WriteKotlinApi.writePoint","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/write-point.html","searchKeys":["writePoint","abstract suspend fun writePoint(point: Point, bucket: String? = null, org: String? = null)","com.influxdb.client.kotlin.WriteKotlinApi.writePoint"]},{"name":"abstract suspend fun writePoints(points: Flow<Point>, bucket: String? = null, org: String? = null)","description":"com.influxdb.client.kotlin.WriteKotlinApi.writePoints","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/write-points.html","searchKeys":["writePoints","abstract suspend fun writePoints(points: Flow<Point>, bucket: String? = null, org: String? = null)","com.influxdb.client.kotlin.WriteKotlinApi.writePoints"]},{"name":"abstract suspend fun writePoints(points: Flow<Point>, parameters: WriteParameters)","description":"com.influxdb.client.kotlin.WriteKotlinApi.writePoints","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/write-points.html","searchKeys":["writePoints","abstract suspend fun writePoints(points: Flow<Point>, parameters: WriteParameters)","com.influxdb.client.kotlin.WriteKotlinApi.writePoints"]},{"name":"abstract suspend fun writePoints(points: Iterable<Point>, bucket: String? = null, org: String? = null)","description":"com.influxdb.client.kotlin.WriteKotlinApi.writePoints","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/write-points.html","searchKeys":["writePoints","abstract suspend fun writePoints(points: Iterable<Point>, bucket: String? = null, org: String? = null)","com.influxdb.client.kotlin.WriteKotlinApi.writePoints"]},{"name":"abstract suspend fun writeRecord(record: String, precision: WritePrecision, bucket: String? = null, org: String? = null)","description":"com.influxdb.client.kotlin.WriteKotlinApi.writeRecord","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/write-record.html","searchKeys":["writeRecord","abstract suspend fun writeRecord(record: String, precision: WritePrecision, bucket: String? = null, org: String? = null)","com.influxdb.client.kotlin.WriteKotlinApi.writeRecord"]},{"name":"abstract suspend fun writeRecords(records: Flow<String>, parameters: WriteParameters)","description":"com.influxdb.client.kotlin.WriteKotlinApi.writeRecords","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/write-records.html","searchKeys":["writeRecords","abstract suspend fun writeRecords(records: Flow<String>, parameters: WriteParameters)","com.influxdb.client.kotlin.WriteKotlinApi.writeRecords"]},{"name":"abstract suspend fun writeRecords(records: Flow<String>, precision: WritePrecision, bucket: String? = null, org: String? = null)","description":"com.influxdb.client.kotlin.WriteKotlinApi.writeRecords","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/write-records.html","searchKeys":["writeRecords","abstract suspend fun writeRecords(records: Flow<String>, precision: WritePrecision, bucket: String? = null, org: String? = null)","com.influxdb.client.kotlin.WriteKotlinApi.writeRecords"]},{"name":"abstract suspend fun writeRecords(records: Iterable<String>, precision: WritePrecision, bucket: String? = null, org: String? = null)","description":"com.influxdb.client.kotlin.WriteKotlinApi.writeRecords","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/write-records.html","searchKeys":["writeRecords","abstract suspend fun writeRecords(records: Iterable<String>, precision: WritePrecision, bucket: String? = null, org: String? = null)","com.influxdb.client.kotlin.WriteKotlinApi.writeRecords"]},{"name":"class InfluxDBClientKotlinFactory","description":"com.influxdb.client.kotlin.InfluxDBClientKotlinFactory","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin-factory/index.html","searchKeys":["InfluxDBClientKotlinFactory","class InfluxDBClientKotlinFactory","com.influxdb.client.kotlin.InfluxDBClientKotlinFactory"]},{"name":"constructor()","description":"com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.InfluxDBClientKotlinFactory","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin-factory/-influx-d-b-client-kotlin-factory.html","searchKeys":["InfluxDBClientKotlinFactory","constructor()","com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.InfluxDBClientKotlinFactory"]},{"name":"fun create(): InfluxDBClientKotlin","description":"com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin-factory/-companion/create.html","searchKeys":["create","fun create(): InfluxDBClientKotlin","com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create"]},{"name":"fun create(connectionString: String): InfluxDBClientKotlin","description":"com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin-factory/-companion/create.html","searchKeys":["create","fun create(connectionString: String): InfluxDBClientKotlin","com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create"]},{"name":"fun create(options: InfluxDBClientOptions): InfluxDBClientKotlin","description":"com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin-factory/-companion/create.html","searchKeys":["create","fun create(options: InfluxDBClientOptions): InfluxDBClientKotlin","com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create"]},{"name":"fun create(url: String, token: CharArray): InfluxDBClientKotlin","description":"com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin-factory/-companion/create.html","searchKeys":["create","fun create(url: String, token: CharArray): InfluxDBClientKotlin","com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create"]},{"name":"fun create(url: String, token: CharArray, org: String?): InfluxDBClientKotlin","description":"com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin-factory/-companion/create.html","searchKeys":["create","fun create(url: String, token: CharArray, org: String?): InfluxDBClientKotlin","com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create"]},{"name":"fun create(url: String, token: CharArray, org: String?, bucket: String?): InfluxDBClientKotlin","description":"com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin-factory/-companion/create.html","searchKeys":["create","fun create(url: String, token: CharArray, org: String?, bucket: String?): InfluxDBClientKotlin","com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create"]},{"name":"fun create(url: String, username: String, password: CharArray): InfluxDBClientKotlin","description":"com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin-factory/-companion/create.html","searchKeys":["create","fun create(url: String, username: String, password: CharArray): InfluxDBClientKotlin","com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion.create"]},{"name":"interface InfluxDBClientKotlin : Closeable","description":"com.influxdb.client.kotlin.InfluxDBClientKotlin","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin/index.html","searchKeys":["InfluxDBClientKotlin","interface InfluxDBClientKotlin : Closeable","com.influxdb.client.kotlin.InfluxDBClientKotlin"]},{"name":"interface QueryKotlinApi","description":"com.influxdb.client.kotlin.QueryKotlinApi","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-query-kotlin-api/index.html","searchKeys":["QueryKotlinApi","interface QueryKotlinApi","com.influxdb.client.kotlin.QueryKotlinApi"]},{"name":"interface WriteKotlinApi","description":"com.influxdb.client.kotlin.WriteKotlinApi","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-write-kotlin-api/index.html","searchKeys":["WriteKotlinApi","interface WriteKotlinApi","com.influxdb.client.kotlin.WriteKotlinApi"]},{"name":"object Companion","description":"com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion","location":"influxdb-client-kotlin/com.influxdb.client.kotlin/-influx-d-b-client-kotlin-factory/-companion/index.html","searchKeys":["Companion","object Companion","com.influxdb.client.kotlin.InfluxDBClientKotlinFactory.Companion"]}]
